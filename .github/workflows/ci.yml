name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.11]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Lint with flake8
      run: |
        pip install flake8
        # Stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # Exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test Flask app
      run: |
        python -c "import app; print('Flask app imports successfully')"
        python -c "from app import app; app.config['TESTING'] = True; print('Flask app configured for testing')"

    - name: Test Docker build
      run: |
        docker build -t docker-drop-test .
        echo "Docker build successful"

    - name: Test Docker run
      run: |
        # Start the container in background
        docker run -d --name test-container -p 5000:5000 docker-drop-test
        
        # Wait for the container to start
        sleep 10
        
        # Test health endpoint
        curl -f http://localhost:5000/health || exit 1
        
        # Clean up
        docker stop test-container
        docker rm test-container
        
        echo "Docker container test successful"
